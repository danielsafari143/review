(()=>{var t={192:(t,e,n)=>{"use strict";n.d(e,{Z:()=>s});var r=n(537),a=n.n(r),i=n(645),o=n.n(i)()(a());o.push([t.id,'body{background-color:#f1f2f5;display:flex;flex-direction:column;justify-content:center;align-items:center}.list-container{width:35vw;background-color:#fff;box-shadow:0 4px 8px 0 #ddd,0 6px 20px 0 #ddd;border-radius:2px;margin-top:40px;box-sizing:border-box}.list-container .sub-container{padding-left:0;background-color:#fff;height:auto}.list-container .sub-container .inp-arrow{list-style:none;display:flex;flex-direction:row;border-bottom:1px solid #ddd;align-items:center;justify-content:space-between;padding:.5rem;box-sizing:border-box}.list-container .sub-container .inp-arrow .textin{width:90%;height:30px;border:none;outline:none;color:#545862;font-style:italic;font-size:16px;font-family:"Open Sans","Lucida Grande",tahoma,verdana,arial,sans-serif}.list-container .sub-container .inp-arrow .img{padding-right:1rem}.list-container .sub-container .inp-arrow ::placeholder{color:#ddd}.list-container .sub-container .inp-arrows{list-style:none;display:flex;flex-direction:row;border-bottom:1px solid #ddd;align-items:center;justify-content:space-between;padding-left:.5rem;padding-right:.5rem;box-sizing:border-box}.list-container .sub-container .inp-arrows .textin{width:90%;height:30px;border:none;outline:none;color:#ddd;font-style:italic;font-size:16px;font-family:"Open Sans","Lucida Grande",tahoma,verdana,arial,sans-serif}.list-container .sub-container .inp-arrows .img{padding-right:1rem}.list-container .sub-container .list-item{list-style:none;display:flex;flex-direction:row;border-bottom:1px solid #ddd;align-items:center;padding:5px;box-sizing:border-box}.list-container .sub-container .list-item .paragraph{display:flex;justify-content:space-between;align-items:center;color:#545862;width:100%;font-size:15px;font-weight:400;padding:1rem;line-height:20px;margin:0;overflow:hidden;white-space:nowrap;font-family:"Open Sans","Lucida Grande",tahoma,verdana,arial,sans-serif}.list-container .sub-container .list-item .paragraph .paragraph2{outline:none;margin:0;padding:0;width:100%}.list-container .sub-container .list-item .paragraph .img{color:#545862}.list-container .sub-container .list-item .paragraph .img:hover{cursor:all-scroll}.list-container .sub-container .list-item input:hover{cursor:pointer}.list-container .sub-container .list-item:hover{background-color:#f09440}.list-container .cleared{padding:15px;width:100%;background-color:#f1f2f5;text-align:center;box-sizing:border-box;border:none}.list-container .cleared a{color:#545862}@media screen and (max-width: 853px){.list-container{width:80vw}}',"",{version:3,sources:["webpack://./src/style.scss"],names:[],mappings:"AAIA,KACI,wBALG,CAMH,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,kBAAA,CAGJ,gBACI,UAAA,CACA,qBAbK,CAcL,6CAAA,CACA,iBAAA,CACA,eAAA,CACA,qBAAA,CAEA,+BACI,cAAA,CACA,qBArBC,CAsBD,WAAA,CAEA,0CACI,eAAA,CACA,YAAA,CACA,kBAAA,CACA,4BAAA,CACA,kBAAA,CACA,6BAAA,CACA,aAAA,CACA,qBAAA,CAEA,kDACI,SAAA,CACA,WAAA,CACA,WAAA,CACA,YAAA,CACA,aArCN,CAsCM,iBAAA,CACA,cAAA,CACA,uEAAA,CAGJ,+CACI,kBAAA,CAEJ,wDACI,UAhDN,CAmDF,2CACI,eAAA,CACA,YAAA,CACA,kBAAA,CACA,4BAAA,CACA,kBAAA,CACA,6BAAA,CACA,kBAAA,CACA,mBAAA,CACA,qBAAA,CACA,mDACI,SAAA,CACA,WAAA,CACA,WAAA,CACA,YAAA,CACA,UAlEN,CAmEM,iBAAA,CACA,cAAA,CACA,uEAAA,CAGJ,gDACI,kBAAA,CAKR,0CACI,eAAA,CACA,YAAA,CACA,kBAAA,CACA,4BAAA,CACA,kBAAA,CACA,WAAA,CACA,qBAAA,CAEA,qDACI,YAAA,CACA,6BAAA,CACA,kBAAA,CACA,aA1FN,CA2FM,UAAA,CACA,cAAA,CACA,eAAA,CACA,YAAA,CACA,gBAAA,CACA,QAAA,CACA,eAAA,CACA,kBAAA,CACA,uEAAA,CAEA,iEACI,YAAA,CACA,QAAA,CACA,SAAA,CACA,UAAA,CAEJ,0DACI,aA5GV,CA8GM,gEACI,iBAAA,CAIR,sDACI,cAAA,CAGR,gDACI,wBAAA,CAGR,yBACI,YAAA,CACA,UAAA,CACA,wBAjID,CAkIC,iBAAA,CACA,qBAAA,CACA,WAAA,CAEJ,2BACI,aApIE,CAuIV,qCACI,gBACI,UAAA,CAAA",sourcesContent:["$bcg : #f1f2f5;\r\n$bcg2 :  #fff;\r\n$borders :#ddd;\r\n$clrTxt : #545862;\r\nbody{\r\n    background-color: $bcg;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\n.list-container{\r\n    width: 35vw;\r\n    background-color: $bcg2;\r\n    box-shadow:0 4px 8px 0 #ddd, 0 6px 20px 0 #ddd;\r\n    border-radius: 2px;\r\n    margin-top: 40px;\r\n    box-sizing: border-box;\r\n\r\n    .sub-container{\r\n        padding-left: 0;\r\n        background-color:$bcg2;\r\n        height: auto;\r\n\r\n        .inp-arrow{\r\n            list-style: none;\r\n            display: flex;\r\n            flex-direction: row;\r\n            border-bottom: 1px solid $borders ;\r\n            align-items: center;\r\n            justify-content: space-between;\r\n            padding: 0.5rem;\r\n            box-sizing: border-box;\r\n           \r\n            .textin{\r\n                width: 90%;\r\n                height: 30px;\r\n                border: none;\r\n                outline: none;\r\n                color: $clrTxt;\r\n                font-style: italic;\r\n                font-size: 16px;\r\n                font-family: 'Open Sans', 'Lucida Grande', tahoma, verdana, arial, sans-serif;\r\n                \r\n            }\r\n            .img{\r\n                padding-right: 1rem;\r\n            }\r\n            ::placeholder{\r\n                color: $borders;\r\n            }\r\n        }\r\n        .inp-arrows{\r\n            list-style: none;\r\n            display: flex;\r\n            flex-direction: row;\r\n            border-bottom: 1px solid $borders ;\r\n            align-items: center;\r\n            justify-content: space-between;\r\n            padding-left: 0.5rem;\r\n            padding-right: 0.5rem;\r\n            box-sizing: border-box;\r\n            .textin{\r\n                width: 90%;\r\n                height: 30px;\r\n                border: none;\r\n                outline: none;\r\n                color: $borders;\r\n                font-style: italic;\r\n                font-size: 16px;\r\n                font-family: 'Open Sans', 'Lucida Grande', tahoma, verdana, arial, sans-serif;\r\n                \r\n            }\r\n            .img{\r\n                padding-right: 1rem;\r\n            }\r\n          \r\n        }\r\n\r\n        .list-item{\r\n            list-style: none;\r\n            display: flex;\r\n            flex-direction: row;\r\n            border-bottom: 1px solid $borders ;\r\n            align-items: center;\r\n            padding: 5px;\r\n            box-sizing: border-box;\r\n            \r\n            .paragraph{\r\n                display: flex;\r\n                justify-content: space-between;\r\n                align-items: center;\r\n                color:$clrTxt;\r\n                width: 100%;\r\n                font-size: 15px;\r\n                font-weight: 400;\r\n                padding: 1rem;\r\n                line-height: 20px;\r\n                margin: 0;\r\n                overflow: hidden;\r\n                white-space: nowrap;\r\n                font-family: 'Open Sans', 'Lucida Grande', tahoma, verdana, arial, sans-serif;\r\n               \r\n                .paragraph2{\r\n                    outline: none;\r\n                    margin: 0;\r\n                    padding: 0;\r\n                    width: 100%;\r\n                }\r\n                .img{\r\n                    color: $clrTxt;\r\n                }\r\n                .img:hover{\r\n                    cursor: all-scroll;\r\n                }\r\n                \r\n            }\r\n            input:hover{\r\n                cursor: pointer;\r\n            }\r\n        }\r\n        .list-item:hover{\r\n            background-color: #f09440;\r\n        }\r\n    }\r\n    .cleared{\r\n        padding: 15px;\r\n        width: 100%;\r\n        background-color: $bcg;\r\n        text-align: center;\r\n        box-sizing: border-box;\r\n        border: none;\r\n    }\r\n    .cleared a{\r\n        color:$clrTxt;\r\n    }\r\n}\r\n@media screen and (max-width:853px) {\r\n    .list-container{\r\n        width: 80vw;\r\n    }\r\n}"],sourceRoot:""}]);const s=o},426:(t,e,n)=>{"use strict";n.d(e,{Z:()=>s});var r=n(537),a=n.n(r),i=n(645),o=n.n(i)()(a());o.push([t.id,"","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]);const s=o},645:t=>{"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",r=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),r&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),r&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,r,a,i){"string"==typeof t&&(t=[[null,t,void 0]]);var o={};if(r)for(var s=0;s<this.length;s++){var d=this[s][0];null!=d&&(o[d]=!0)}for(var l=0;l<t.length;l++){var c=[].concat(t[l]);r&&o[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),a&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=a):c[4]="".concat(a)),e.push(c))}},e}},537:t=>{"use strict";t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(a," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:t=>{"use strict";var e=[];function n(t){for(var n=-1,r=0;r<e.length;r++)if(e[r].identifier===t){n=r;break}return n}function r(t,r){for(var i={},o=[],s=0;s<t.length;s++){var d=t[s],l=r.base?d[0]+r.base:d[0],c=i[l]||0,A="".concat(l," ").concat(c);i[l]=c+1;var p=n(A),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=a(u,r);r.byIndex=s,e.splice(s,0,{identifier:A,updater:m,references:1})}o.push(A)}return o}function a(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,a){var i=r(t=t||[],a=a||{});return function(t){t=t||[];for(var o=0;o<i.length;o++){var s=n(i[o]);e[s].references--}for(var d=r(t,a),l=0;l<i.length;l++){var c=n(i[l]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}i=d}}},569:t=>{"use strict";var e={};t.exports=function(t,n){var r=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:t=>{"use strict";t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{"use strict";t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{"use strict";t.exports=function(t){var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,a&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{"use strict";t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},777:()=>{document.addEventListener("click",(t=>{"inpt"===t.target.className&&(document.getElementById(t.target.id).parentElement.childNodes[1].style.textDecoration="line-through")}))},774:()=>{document.addEventListener("keyup",(t=>{if("paragraph2"===t.target.className){const e=document.getElementById(t.target.id).parentElement.childNodes[1].id,n=JSON.parse(localStorage.getItem("dataList"));n[e]=document.getElementById(t.target.id).textContent,localStorage.setItem("dataList",JSON.stringify(n))}}))},735:()=>{const t=new class{constructor(){this.containerId=document.getElementById("sub-container"),this.btnInsertId=document.getElementById("insertBtn"),this.InptValue=document.getElementById("textin"),this.listItems=document.getElementById("list-item"),this.storeData=[]}insert=()=>{""!==this.InptValue.value&&(null===JSON.parse(localStorage.getItem("dataList"))?(localStorage.setItem("dataList",JSON.stringify(this.storeData)),this.storeData=JSON.parse(localStorage.getItem("dataList")),this.storeData.push(this.InptValue.value),localStorage.setItem("dataList",JSON.stringify(this.storeData)),this.refesh()):(this.storeData=JSON.parse(localStorage.getItem("dataList")),this.storeData.push(this.InptValue.value),localStorage.setItem("dataList",JSON.stringify(this.storeData)),this.refesh()))};refesh=()=>{const t=JSON.parse(localStorage.getItem("dataList"));for(let e=t.length-1;e<t.length;e+=1){const n=document.createElement("li"),r=document.createElement("input"),a=document.createElementNS("http://www.w3.org/2000/svg","svg"),i=document.createElementNS("http://www.w3.org/2000/svg","path");a.classList.add("bi"),a.classList.add("bi-three-dots-vertical"),a.classList.add("img"),a.id=[e],r.id=`inp${[e]}`,a.setAttribute("fill","currentColor"),a.setAttribute("viewBox","0 0 16 16"),a.setAttribute("width","16"),a.setAttribute("height","16"),i.setAttribute("d","M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"),a.appendChild(i),r.className="inpt",r.type="checkbox";const o=document.createElement("div"),s=document.createElement("p"),d=document.createTextNode(t[e]);o.className="paragraph",s.id=`paragraph2${[e]}`,s.appendChild(d),s.className="paragraph2",s.setAttribute("contentEditable","true"),o.appendChild(s),o.appendChild(a),o.id=`paragraph${[e]}`,n.appendChild(r),n.appendChild(o),n.id=`list-item${[e]}`,n.className="list-item",this.containerId.appendChild(n)}this.InptValue.value=""};display=()=>{if(null===JSON.parse(localStorage.getItem("dataList"))){localStorage.setItem("dataList",JSON.stringify(this.storeData));const t=JSON.parse(localStorage.getItem("dataList"));for(let e=0;e<t.length;e+=1){const n=document.createElement("li"),r=document.createElement("input"),a=document.createElementNS("http://www.w3.org/2000/svg","svg"),i=document.createElementNS("http://www.w3.org/2000/svg","path");a.classList.add("bi"),a.classList.add("bi-three-dots-vertical"),a.classList.add("img"),a.id=[e],a.setAttribute("fill","currentColor"),a.setAttribute("viewBox","0 0 16 16"),a.setAttribute("width","16"),a.setAttribute("height","16"),i.setAttribute("d","M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"),a.appendChild(i),r.id=`inp${[e]}`,r.type="checkbox",r.className="inpt";const o=document.createElement("div"),s=document.createElement("p"),d=document.createTextNode(t[e]);o.className="paragraph",s.appendChild(d),s.className="paragraph2",s.id=`paragraph2${[e]}`,s.setAttribute("contentEditable","true"),o.appendChild(s),o.appendChild(a),o.id=`paragraph${[e]}`,n.appendChild(r),n.appendChild(o),n.id=`list-item${[e]}`,n.className="list-item",this.containerId.appendChild(n)}this.InptValue.value=""}else{const t=JSON.parse(localStorage.getItem("dataList"));for(let e=0;e<t.length;e+=1){const n=document.createElement("li"),r=document.createElement("input"),a=document.createElementNS("http://www.w3.org/2000/svg","svg"),i=document.createElementNS("http://www.w3.org/2000/svg","path");a.classList.add("bi"),a.classList.add("bi-three-dots-vertical"),a.classList.add("img"),a.id=[e],a.setAttribute("fill","currentColor"),a.setAttribute("viewBox","0 0 16 16"),a.setAttribute("width","16"),a.setAttribute("height","16"),i.setAttribute("d","M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"),a.appendChild(i),r.id=`inp${[e]}`,r.type="checkbox",r.className="inpt";const o=document.createElement("div"),s=document.createElement("p"),d=document.createTextNode(t[e]);o.className="paragraph",s.appendChild(d),s.className="paragraph2",s.id=`paragraph2${[e]}`,s.setAttribute("contentEditable","true"),o.appendChild(s),o.appendChild(a),o.id=`paragraph${[e]}`,n.appendChild(r),n.appendChild(o),n.id=`list-item${[e]}`,n.className="list-item",this.containerId.appendChild(n)}this.InptValue.value=""}};clear=()=>{const t=JSON.parse(localStorage.getItem("dataList"));for(let e=0;e<t.length;e+=1)null!==document.getElementById(`list-item${[e]}`)?(document.getElementById(`list-item${[e]}`).remove(),localStorage.setItem("dataList",JSON.stringify([]))):location.reload()};remove=t=>{if("tester"===t.target.classList[0]){this.storeData=JSON.parse(localStorage.getItem("dataList"));const e=document.getElementById(`paragraph${t.target.id}`);document.getElementById(`list-item${t.target.id}`).remove();const n=this.storeData.filter((t=>t!==e.textContent));this.storeData=n,localStorage.setItem("dataList",JSON.stringify(this.storeData))}};itemColor=t=>{if("paragraph2"===t.target.className){const e=document.getElementById(t.target.id).parentElement.id,n=document.getElementById(e),r=n.childNodes[1].id,a=document.createElementNS("http://www.w3.org/2000/svg","svg"),i=document.createElementNS("http://www.w3.org/2000/svg","path"),o=document.createElementNS("http://www.w3.org/2000/svg","path");a.classList.add("tester"),a.classList.add("bi"),a.classList.add("bi-trash"),a.classList.add("img"),a.id=r,a.setAttribute("fill","currentColor"),a.setAttribute("viewBox","0 0 16 16"),a.setAttribute("width","16"),a.setAttribute("height","16"),i.setAttribute("d","M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"),o.setAttribute("d","M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"),o.setAttribute("fill-rule","evenodd"),a.appendChild(i),a.appendChild(o),n.replaceChild(a,n.childNodes[1]),document.getElementById(r).style.cursor="pointer"}}};t.display(),document.addEventListener("click",t.remove),window.addEventListener("click",t.itemColor),document.addEventListener("keyup",(e=>{"Enter"===e.code&&t.insert()})),document.getElementById("clearIem").addEventListener("click",(()=>{t.clear()}))},242:()=>{document.getElementById("refresh").addEventListener("click",(()=>{location.reload()}))}},e={};function n(r){var a=e[r];if(void 0!==a)return a.exports;var i=e[r]={id:r,exports:{}};return t[r](i,i.exports,n),i.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.nc=void 0,(()=>{"use strict";var t=n(379),e=n.n(t),r=n(795),a=n.n(r),i=n(569),o=n.n(i),s=n(565),d=n.n(s),l=n(216),c=n.n(l),A=n(589),p=n.n(A),u=n(426),m={};m.styleTagTransform=p(),m.setAttributes=d(),m.insert=o().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=c(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;var g=n(192),h={};h.styleTagTransform=p(),h.setAttributes=d(),h.insert=o().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=c(),e()(g.Z,h),g.Z&&g.Z.locals&&g.Z.locals,n(735),n(777),n(774),n(242)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,